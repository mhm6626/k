
##################################################
# C.2.1 Basic concepts

namespace_name : namespace_or_type_name  
type_name : namespace_or_type_name  
namespace_or_type_name : identifier  
                       | namespace_or_type_name  PERIOD  identifier  

##################################################
# C.2.2 Types

type : value_type  
     | reference_type  
value_type : struct_type  
           | enum_type  
struct_type : type_name  
            | simple_type  
simple_type : numeric_type  
            | BOOL  
numeric_type : integral_type  
             | floating_point_type  
             | DECIMAL  
integral_type : SBYTE  
              | BYTE  
              | SHORT  
              | USHORT  
              | INT  
              | UINT  
              | LONG  
              | ULONG  
              | CHAR  
floating_point_type : FLOAT  
                    | DOUBLE  
enum_type : type_name  
reference_type : class_type  
               | interface_type  
               | array_type  
               | delegate_type  
class_type : type_name  
           | OBJECT  
           | STRING  
interface_type : type_name  
array_type : non_array_type  rank_specifiers  
non_array_type : type  
rank_specifiers : rank_specifier  
                | rank_specifiers  rank_specifier  
rank_specifier : L_BRACKET  dim_separators_opt  R_BRACKET  
dim_separators : COMMA  
               | dim_separators  COMMA  
delegate_type : type_name  

##################################################
# C.2.3 Variables

variable_reference : expression  

##################################################
# C.2.4 Expressions

argument_list : argument  
              | argument_list  COMMA  argument  
argument : expression  
         | REF  variable_reference  
         | OUT  variable_reference  
primary_expression : primary_no_array_creation_expression  
                   | array_creation_expression  
primary_no_array_creation_expression : literal  
                                     | simple_name  
                                     | parenthesized_expression  
                                     | member_access  
                                     | invocation_expression  
                                     | element_access  
                                     | this_access  
                                     | base_access  
                                     | post_increment_expression  
                                     | post_decrement_expression  
                                     | object_creation_expression  
                                     | delegate_creation_expression  
                                     | typeof_expression  
                                     | sizeof_expression  
                                     | checked_expression  
                                     | unchecked_expression  
simple_name : identifier  
parenthesized_expression : L_PAREN  expression  R_PAREN  
member_access : primary_expression  PERIOD  identifier  
              | predefined_type  PERIOD  identifier  
              | predefined_type :  one  of  
              | BOOL  BYTE  CHAR  DECIMAL  DOUBLE  FLOAT  INT  LONG  
              | OBJECT  SBYTE  SHORT  STRING  UINT  ULONG  USHORT  
invocation_expression : primary_expression  L_PAREN  argument_list_opt  R_PAREN  
element_access : primary_no_array_creation_expression  L_BRACKET  expression_list  R_BRACKET  
expression_list : expression  
                | expression_list  COMMA  expression  
this_access : THIS  
base_access : BASE  PERIOD  identifier  
            | BASE  L_BRACKET  expression_list  R_BRACKET  
post_increment_expression : primary_expression  PLUS_PLUS  
post_decrement_expression : primary_expression  MINUS_MINUS  
object_creation_expression : NEW  type  L_PAREN  argument_list_opt  R_PAREN  
array_creation_expression : NEW  non_array_type  L_BRACKET  expression_list  R_BRACKET  rank_specifiers_opt  array_initializer_opt  
                          | NEW  array_type  array_initializer  
delegate_creation_expression : NEW  delegate_type  L_PAREN  expression  R_PAREN  
typeof_expression : TYPEOF  L_PAREN  type  R_PAREN  
                  | TYPEOF  L_PAREN  VOID  R_PAREN  
checked_expression : CHECKED  L_PAREN  expression  R_PAREN  
unchecked_expression : UNCHECKED  L_PAREN  expression  R_PAREN  
unary_expression : primary_expression  
                 | PLUS  unary_expression  
                 | MINUS  unary_expression  
                 | L_NOT  unary_expression  
                 | NOT  unary_expression  
                 | TIMES  unary_expression  
                 | pre_increment_expression  
                 | pre_decrement_expression  
                 | cast_expression  
pre_increment_expression : PLUS_PLUS  unary_expression  
pre_decrement_expression : MINUS_MINUS  unary_expression  
cast_expression : L_PAREN  type  R_PAREN  unary_expression  
multiplicative_expression : unary_expression  
                          | multiplicative_expression  TIMES  unary_expression  
                          | multiplicative_expression  DIVIDE  unary_expression  
                          | multiplicative_expression  MOD  unary_expression  
additive_expression : multiplicative_expression  
                    | additive_expression  PLUS  multiplicative_expression  
                    | additive_expression  â€“  multiplicative_expression  
shift_expression : additive_expression  
                 | shift_expression  L_SHIFT  additive_expression  
                 | shift_expression  R_SHIFT  additive_expression  
relational_expression : shift_expression  
                      | relational_expression  LT  shift_expression  
                      | relational_expression  GT  shift_expression  
                      | relational_expression  LE  shift_expression  
                      | relational_expression  GE  shift_expression  
                      | relational_expression  IS  type  
                      | relational_expression  AS  type  
equality_expression : relational_expression  
                    | equality_expression  EQ  relational_expression  
                    | equality_expression  NE  relational_expression  
and_expression : equality_expression  
               | and_expression  AND  equality_expression  
exclusive_or_expression : and_expression  
                        | exclusive_or_expression  XOR  and_expression  
inclusive_or_expression : exclusive_or_expression  
                        | inclusive_or_expression  OR  exclusive_or_expression  
conditional_and_expression : inclusive_or_expression  
                           | conditional_and_expression  L_AND  inclusive_or_expression  
conditional_or_expression : conditional_and_expression  
                          | conditional_or_expression  L_OR  conditional_and_expression  
conditional_expression : conditional_or_expression  
                       | conditional_or_expression  CONDOP  expression  COLON  expression  
assignment : unary_expression  assignment_operator  expression  
           | assignment_operator :  one  of  
           | EQUALS  PLUS_EQUAL  MINUS_EQUAL  TIMES_EQUAL  DIV_EQUAL  MOD_EQUAL  AND_EQUAL  OR_EQUAL  XOR_EQUAL  L_SHIFT_EQUAL  R_SHIFT_EQUAL  
expression : conditional_expression  
           | assignment  
constant_expression : expression  
boolean_expression : expression  

##################################################
# C.2.5 Statements

statement : labeled_statement  
          | declaration_statement  
          | embedded_statement  
embedded_statement : block  
                   | empty_statement  
                   | expression_statement  
                   | selection_statement  
                   | iteration_statement  
                   | jump_statement  
                   | try_statement  
                   | checked_statement  
                   | unchecked_statement  
                   | lock_statement  
                   | using_statement  
block : L_BRACE  statement_list_opt  R_BRACE  
statement_list : statement  
               | statement_list  statement  
empty_statement : SEMI  
labeled_statement : identifier  COLON  statement  
declaration_statement : local_variable_declaration  SEMI  
                      | local_constant_declaration  SEMI  
local_variable_declaration : type  local_variable_declarators  
local_variable_declarators : local_variable_declarator  
                           | local_variable_declarators  COMMA  local_variable_declarator  
local_variable_declarator : identifier  
                          | identifier  EQUALS  local_variable_initializer  
local_variable_initializer : expression  
                           | array_initializer  
local_constant_declaration : CONST  type  constant_declarators  
constant_declarators : constant_declarator  
                     | constant_declarators  COMMA  constant_declarator  
constant_declarator : identifier  EQUALS  constant_expression  
expression_statement : statement_expression  SEMI  
statement_expression : invocation_expression  
                     | object_creation_expression  
                     | assignment  
                     | post_increment_expression  
                     | post_decrement_expression  
                     | pre_increment_expression  
                     | pre_decrement_expression  
selection_statement : if_statement  
                    | switch_statement  
if_statement : IF  L_PAREN  boolean_expression  R_PAREN  embedded_statement  
             | IF  L_PAREN  boolean_expression  R_PAREN  embedded_statement  ELSE  embedded_statement  
boolean_expression : expression  
switch_statement : SWITCH  L_PAREN  expression  R_PAREN  switch_block  
switch_block : L_BRACE  switch_sections_opt  R_BRACE  
switch_sections : switch_section  
                | switch_sections  switch_section  
switch_section : switch_labels  statement_list  
switch_labels : switch_label  
              | switch_labels  switch_label  
switch_label : CASE  constant_expression  COLON  
             | DEFAULT  COLON  
iteration_statement : while_statement  
                    | do_statement  
                    | for_statement  
                    | foreach_statement  
while_statement : WHILE  L_PAREN  boolean_expression  R_PAREN  embedded_statement  
do_statement : DO  embedded_statement  WHILE  L_PAREN  boolean_expression  R_PAREN  SEMI  
for_statement : FOR  L_PAREN  for_initializer_opt  SEMI  for_condition_opt  SEMI  for_iterator_opt  R_PAREN  embedded_statement  
for_initializer : local_variable_declaration  
                | statement_expression_list  
for_condition : boolean_expression  
for_iterator : statement_expression_list  
statement_expression_list : statement_expression  
                          | statement_expression_list  COMMA  statement_expression  
foreach_statement : FOREACH  L_PAREN  type  identifier  IN  expression  R_PAREN  embedded_statement  
jump_statement : break_statement  
               | continue_statement  
               | goto_statement  
               | return_statement  
               | throw_statement  
break_statement : BREAK  SEMI  
continue_statement : CONTINUE  SEMI  
goto_statement : GOTO  identifier  SEMI  
               | GOTO  CASE  constant_expression  SEMI  
               | GOTO  DEFAULT  SEMI  
return_statement : RETURN  expression_opt  SEMI  
throw_statement : THROW  expression_opt  SEMI  
try_statement : TRY  block  catch_clauses  
              | TRY  block  finally_clause  
              | TRY  block  catch_clauses  finally_clause  
catch_clauses : specific_catch_clauses  general_catch_clause_opt  
              | specific_catch_clauses_opt  general_catch_clause  
specific_catch_clauses : specific_catch_clause  
                       | specific_catch_clauses  specific_catch_clause  
specific_catch_clause : CATCH  L_PAREN  class_type  identifier_opt  R_PAREN  block  
general_catch_clause : CATCH  block  
finally_clause : FINALLY  block  
checked_statement : CHECKED  block  
unchecked_statement : UNCHECKED  block  
lock_statement : LOCK  L_PAREN  expression  R_PAREN  embedded_statement  
using_statement : USING  L_PAREN  resource_acquisition  R_PAREN  embedded_statement  
resource_acquisition : local_variable_declaration  
                     | expression  

##################################################
# C.2.6 Namespaces

compilation_unit : using_directives_opt  global_attributes_opt  namespace_member_declarations_opt  
namespace_declaration : NAMESPACE  qualified_identifier  namespace_body  ;opt  
qualified_identifier : identifier  
                     | qualified_identifier  PERIOD  identifier  
namespace_body : L_BRACE  using_directives_opt  namespace_member_declarations_opt  R_BRACE  
using_directives : using_directive  
                 | using_directives  using_directive  
using_directive : using_alias_directive  
                | using_namespace_directive  
using_alias_directive : USING  identifier  EQUALS  namespace_or_type_name  SEMI  
using_namespace_directive : USING  namespace_name  SEMI  
namespace_member_declarations : namespace_member_declaration  
                              | namespace_member_declarations  namespace_member_declaration  
namespace_member_declaration : namespace_declaration  
                             | type_declaration  
type_declaration : class_declaration  
                 | struct_declaration  
                 | interface_declaration  
                 | enum_declaration  
                 | delegate_declaration  

##################################################
# C.2.7 Classes

class_declaration : attributes_opt  class_modifiers_opt  CLASS  identifier  class_base_opt  class_body  ;opt  
class_modifiers : class_modifier  
                | class_modifiers  class_modifier  
class_modifier : NEW  
               | PUBLIC  
               | PROTECTED  
               | INTERNAL  
               | PRIVATE  
               | ABSTRACT  
               | SEALED  
class_base : COLON  class_type  
           | COLON  interface_type_list  
           | COLON  class_type  COMMA  interface_type_list  
interface_type_list : interface_type  
                    | interface_type_list  COMMA  interface_type  
class_body : L_BRACE  class_member_declarations_opt  R_BRACE  
class_member_declarations : class_member_declaration  
                          | class_member_declarations  class_member_declaration  
class_member_declaration : constant_declaration  
                         | field_declaration  
                         | method_declaration  
                         | property_declaration  
                         | event_declaration  
                         | indexer_declaration  
                         | operator_declaration  
                         | constructor_declaration  
                         | destructor_declaration  
                         | static_constructor_declaration  
                         | type_declaration  
constant_declaration : attributes_opt  constant_modifiers_opt  CONST  type  constant_declarators  SEMI  
constant_modifiers : constant_modifier  
                   | constant_modifiers  constant_modifier  
constant_modifier : NEW  
                  | PUBLIC  
                  | PROTECTED  
                  | INTERNAL  
                  | PRIVATE  
constant_declarators : constant_declarator  
                     | constant_declarators  COMMA  constant_declarator  
constant_declarator : identifier  EQUALS  constant_expression  
field_declaration : attributes_opt  field_modifiers_opt  type  variable_declarators  SEMI  
field_modifiers : field_modifier  
                | field_modifiers  field_modifier  
field_modifier : NEW  
               | PUBLIC  
               | PROTECTED  
               | INTERNAL  
               | PRIVATE  
               | STATIC  
               | READONLY  
               | VOLATILE  
variable_declarators : variable_declarator  
                     | variable_declarators  COMMA  variable_declarator  
variable_declarator : identifier  
                    | identifier  EQUALS  variable_initializer  
variable_initializer : expression  
                     | array_initializer  
method_declaration : method_header  method_body  
method_header : attributes_opt  method_modifiers_opt  return_type  member_name  L_PAREN  formal_parameter_list_opt  R_PAREN  
method_modifiers : method_modifier  
                 | method_modifiers  method_modifier  
method_modifier : NEW  
                | PUBLIC  
                | PROTECTED  
                | INTERNAL  
                | PRIVATE  
                | STATIC  
                | VIRTUAL  
                | SEALED  
                | OVERRIDE  
                | ABSTRACT  
                | EXTERN  
return_type : type  
            | VOID  
member_name : identifier  
            | interface_type  PERIOD  identifier  
method_body : block  
            | SEMI  
formal_parameter_list : fixed_parameters  
                      | fixed_parameters  COMMA  parameter_array  
                      | parameter_array  
fixed_parameters : fixed_parameter  
                 | fixed_parameters  COMMA  fixed_parameter  
fixed_parameter : attributes_opt  parameter_modifier_opt  type  identifier  
parameter_modifier : REF  
                   | OUT  
parameter_array : attributes_opt  PARAMS  array_type  identifier  
property_declaration : attributes_opt  property_modifiers_opt  type  member_name  L_BRACE  accessor_declarations  R_BRACE  
property_modifiers : property_modifier  
                   | property_modifiers  property_modifier  
property_modifier : NEW  
                  | PUBLIC  
                  | PROTECTED  
                  | INTERNAL  
                  | PRIVATE  
                  | STATIC  
                  | VIRTUAL  
                  | SEALED  
                  | OVERRIDE  
                  | ABSTRACT  
                  | EXTERN  
member_name : identifier  
            | interface_type  PERIOD  identifier  
accessor_declarations : get_accessor_declaration  set_accessor_declaration_opt  
                      | set_accessor_declaration  get_accessor_declaration_opt  
get_accessor_declaration : attributes_opt  get  accessor_body  
set_accessor_declaration : attributes_opt  set  accessor_body  
accessor_body : block  
              | SEMI  
event_declaration : attributes_opt  event_modifiers_opt  EVENT  type  variable_declarators  SEMI  
                  | attributes_opt  event_modifiers_opt  EVENT  type  member_name  L_BRACE  event_accessor_declarations  R_BRACE  
event_modifiers : event_modifier  
                | event_modifiers  event_modifier  
event_modifier : NEW  
               | PUBLIC  
               | PROTECTED  
               | INTERNAL  
               | PRIVATE  
               | STATIC  
               | VIRTUAL  
               | SEALED  
               | OVERRIDE  
               | ABSTRACT  
               | EXTERN  
event_accessor_declarations : add_accessor_declaration  remove_accessor_declaration  
                            | remove_accessor_declaration  add_accessor_declaration  
add_accessor_declaration : attributes_opt  add  block  
remove_accessor_declaration : attributes_opt  remove  block  
indexer_declaration : attributes_opt  indexer_modifiers_opt  indexer_declarator  L_BRACE  accessor_declarations  R_BRACE  
indexer_modifiers : indexer_modifier  
                  | indexer_modifiers  indexer_modifier  
indexer_modifier : NEW  
                 | PUBLIC  
                 | PROTECTED  
                 | INTERNAL  
                 | PRIVATE  
                 | VIRTUAL  
                 | SEALED  
                 | OVERRIDE  
                 | ABSTRACT  
                 | EXTERN  
indexer_declarator : type  THIS  L_BRACKET  formal_parameter_list  R_BRACKET  
                   | type  interface_type  PERIOD  THIS  L_BRACKET  formal_parameter_list  R_BRACKET  
operator_declaration : attributes_opt  operator_modifiers  operator_declarator  operator_body  
operator_modifiers : operator_modifier  
                   | operator_modifiers  operator_modifier  
operator_modifier : PUBLIC  
                  | STATIC  
                  | EXTERN  
operator_declarator : unary_operator_declarator  
                    | binary_operator_declarator  
                    | conversion_operator_declarator  
unary_operator_declarator : type  OPERATOR  overloadable_unary_operator  L_PAREN  type  identifier  R_PAREN  
                          | overloadable_unary_operator :  one  of  
                          | PLUS  MINUS  L_NOT  NOT  PLUS_PLUS  MINUS_MINUS  TRUE  FALSE  
binary_operator_declarator : type  OPERATOR  overloadable_binary_operator  L_PAREN  type  identifier  COMMA  type  identifier  R_PAREN  
                           | overloadable_binary_operator :  one  of  
                           | PLUS  MINUS  TIMES  DIVIDE  MOD  AND  OR  XOR  L_SHIFT  R_SHIFT  EQ  NE  GT  LT  GE  LE  
conversion_operator_declarator : IMPLICIT  OPERATOR  type  L_PAREN  type  identifier  R_PAREN  
                               | EXPLICIT  OPERATOR  type  L_PAREN  type  identifier  R_PAREN  
operator_body : block  
              | SEMI  
constructor_declaration : attributes_opt  constructor_modifiers_opt  constructor_declarator  constructor_body  
constructor_modifiers : constructor_modifier  
                      | constructor_modifiers  constructor_modifier  
constructor_modifier : PUBLIC  
                     | PROTECTED  
                     | INTERNAL  
                     | PRIVATE  
                     | EXTERN  
constructor_declarator : identifier  L_PAREN  formal_parameter_list_opt  R_PAREN  constructor_initializer_opt  
constructor_initializer : COLON  BASE  L_PAREN  argument_list_opt  R_PAREN  
                        | COLON  THIS  L_PAREN  argument_list_opt  R_PAREN  
constructor_body : block  
                 | SEMI  
static_constructor_declaration : attributes_opt  static_constructor_modifiers  identifier  L_PAREN  R_PAREN  static_constructor_body  
                               | static_constructor_modifiers  
                               | extern_opt  STATIC  
                               | STATIC  extern_opt  
static_constructor_body : block  
                        | SEMI  
destructor_declaration : attributes_opt  extern_opt  NOT  identifier  L_PAREN  R_PAREN  destructor_body  
destructor_body : block  
                | SEMI  

##################################################
# C.2.8 Structs

struct_declaration : attributes_opt  struct_modifiers_opt  STRUCT  identifier  struct_interfaces_opt  struct_body  ;opt  
struct_modifiers : struct_modifier  
                 | struct_modifiers  struct_modifier  
struct_modifier : NEW  
                | PUBLIC  
                | PROTECTED  
                | INTERNAL  
                | PRIVATE  
struct_interfaces : COLON  interface_type_list  
struct_body : L_BRACE  struct_member_declarations_opt  R_BRACE  
struct_member_declarations : struct_member_declaration  
                           | struct_member_declarations  struct_member_declaration  
struct_member_declaration : constant_declaration  
                          | field_declaration  
                          | method_declaration  
                          | property_declaration  
                          | event_declaration  
                          | indexer_declaration  
                          | operator_declaration  
                          | constructor_declaration  
                          | static_constructor_declaration  
                          | type_declaration  

##################################################
# C.2.9 Arrays

array_type : non_array_type  rank_specifiers  
non_array_type : type  
rank_specifiers : rank_specifier  
                | rank_specifiers  rank_specifier  
rank_specifier : L_BRACKET  dim_separators_opt  R_BRACKET  
dim_separators : COMMA  
               | dim_separators  COMMA  
array_initializer : L_BRACE  variable_initializer_list_opt  R_BRACE  
                  | L_BRACE  variable_initializer_list  COMMA  R_BRACE  
variable_initializer_list : variable_initializer  
                          | variable_initializer_list  COMMA  variable_initializer  
variable_initializer : expression  
                     | array_initializer  

##################################################
# C.2.10 Interfaces

interface_declaration : attributes_opt  interface_modifiers_opt  INTERFACE  identifier  interface_base_opt  interface_body  ;opt  
interface_modifiers : interface_modifier  
                    | interface_modifiers  interface_modifier  
interface_modifier : NEW  
                   | PUBLIC  
                   | PROTECTED  
                   | INTERNAL  
                   | PRIVATE  
interface_base : COLON  interface_type_list  
interface_body : L_BRACE  interface_member_declarations_opt  R_BRACE  
interface_member_declarations : interface_member_declaration  
                              | interface_member_declarations  interface_member_declaration  
interface_member_declaration : interface_method_declaration  
                             | interface_property_declaration  
                             | interface_event_declaration  
                             | interface_indexer_declaration  
interface_method_declaration : attributes_opt  new_opt  return_type  identifier  L_PAREN  formal_parameter_list_opt  R_PAREN  SEMI  
interface_property_declaration : attributes_opt  new_opt  type  identifier  L_BRACE  interface_accessors  R_BRACE  
interface_accessors : attributes_opt  get  SEMI  
                    | attributes_opt  set  SEMI  
                    | attributes_opt  get  SEMI  attributes_opt  set  SEMI  
                    | attributes_opt  set  SEMI  attributes_opt  get  SEMI  
interface_event_declaration : attributes_opt  new_opt  EVENT  type  identifier  SEMI  
interface_indexer_declaration : attributes_opt  new_opt  type  THIS  L_BRACKET  formal_parameter_list  R_BRACKET  L_BRACE  interface_accessors  R_BRACE  

##################################################
# C.2.11 Enums

enum_declaration : attributes_opt  enum_modifiers_opt  ENUM  identifier  enum_base_opt  enum_body  ;opt  
enum_base : COLON  integral_type  
enum_body : L_BRACE  enum_member_declarations_opt  R_BRACE  
          | L_BRACE  enum_member_declarations  COMMA  R_BRACE  
enum_modifiers : enum_modifier  
               | enum_modifiers  enum_modifier  
enum_modifier : NEW  
              | PUBLIC  
              | PROTECTED  
              | INTERNAL  
              | PRIVATE  
enum_member_declarations : enum_member_declaration  
                         | enum_member_declarations  COMMA  enum_member_declaration  
enum_member_declaration : attributes_opt  identifier  
                        | attributes_opt  identifier  EQUALS  constant_expression  

##################################################
# C.2.12 Delegates

delegate_declaration : attributes_opt  delegate_modifiers_opt  DELEGATE  return_type  identifier  L_PAREN  formal_parameter_list_opt  R_PAREN  SEMI  
delegate_modifiers : delegate_modifier  
                   | delegate_modifiers  delegate_modifier  
delegate_modifier : NEW  
                  | PUBLIC  
                  | PROTECTED  
                  | INTERNAL  
                  | PRIVATE  

##################################################
# C.2.13 Attributes

global_attributes : global_attribute_sections  
global_attribute_sections : global_attribute_section  
                          | global_attribute_sections  global_attribute_section  
global_attribute_section : L_BRACKET  global_attribute_target_specifier  attribute_list  R_BRACKET  
                         | L_BRACKET  global_attribute_target_specifier  attribute_list  ,]  
global_attribute_target_specifier : global_attribute_target  COLON  
global_attribute_target : assembly  
                        | module  
attributes : attribute_sections  
attribute_sections : attribute_section  
                   | attribute_sections  attribute_section  
attribute_section : L_BRACKET  attribute_target_specifier_opt  attribute_list  R_BRACKET  
                  | L_BRACKET  attribute_target_specifier_opt  attribute_list  COMMA  R_BRACKET  
attribute_target_specifier : attribute_target  COLON  
attribute_target : field  
                 | EVENT  
                 | method  
                 | param  
                 | property  
                 | RETURN  
                 | type  
attribute_list : attribute  
               | attribute_list  COMMA  attribute  
attribute : attribute_name  attribute_arguments_opt  
attribute_name : type_name  
attribute_arguments : L_PAREN  positional_argument_list_opt  R_PAREN  
                    | L_PAREN  positional_argument_list  COMMA  named_argument_list  R_PAREN  
                    | L_PAREN  named_argument_list  R_PAREN  
positional_argument_list : positional_argument  
                         | positional_argument_list  COMMA  positional_argument  
positional_argument : attribute_argument_expression  
named_argument_list : named_argument  
                    | named_argument_list  COMMA  named_argument  
named_argument : identifier  EQUALS  attribute_argument_expression  
attribute_argument_expression : expression  

##################################################
# C.2.31 Opt

dim_separators_opt : dim_separators  
                   | empty  
argument_list_opt : argument_list  
                  | empty  
argument_list_opt : argument_list  
                  | empty  
rank_specifiers_opt : rank_specifiers  
                    | empty  
array_initializer_opt : array_initializer  
                      | empty  
statement_list_opt : statement_list  
                   | empty  
switch_sections_opt : switch_sections  
                    | empty  
for_initializer_opt : for_initializer  
                    | empty  
for_condition_opt : for_condition  
                  | empty  
for_iterator_opt : for_iterator  
                 | empty  
expression_opt : expression  
               | empty  
expression_opt : expression  
               | empty  
general_catch_clause_opt : general_catch_clause  
                         | empty  
specific_catch_clauses_opt : specific_catch_clauses  
                           | empty  
identifier_opt : identifier  
               | empty  
using_directives_opt : using_directives  
                     | empty  
global_attributes_opt : global_attributes  
                      | empty  
namespace_member_declarations_opt : namespace_member_declarations  
                                  | empty  
using_directives_opt : using_directives  
                     | empty  
namespace_member_declarations_opt : namespace_member_declarations  
                                  | empty  
attributes_opt : attributes  
               | empty  
class_modifiers_opt : class_modifiers  
                    | empty  
class_base_opt : class_base  
               | empty  
class_member_declarations_opt : class_member_declarations  
                              | empty  
attributes_opt : attributes  
               | empty  
constant_modifiers_opt : constant_modifiers  
                       | empty  
attributes_opt : attributes  
               | empty  
field_modifiers_opt : field_modifiers  
                    | empty  
attributes_opt : attributes  
               | empty  
method_modifiers_opt : method_modifiers  
                     | empty  
formal_parameter_list_opt : formal_parameter_list  
                          | empty  
attributes_opt : attributes  
               | empty  
parameter_modifier_opt : parameter_modifier  
                       | empty  
attributes_opt : attributes  
               | empty  
attributes_opt : attributes  
               | empty  
property_modifiers_opt : property_modifiers  
                       | empty  
set_accessor_declaration_opt : set_accessor_declaration  
                             | empty  
get_accessor_declaration_opt : get_accessor_declaration  
                             | empty  
attributes_opt : attributes  
               | empty  
attributes_opt : attributes  
               | empty  
attributes_opt : attributes  
               | empty  
event_modifiers_opt : event_modifiers  
                    | empty  
attributes_opt : attributes  
               | empty  
event_modifiers_opt : event_modifiers  
                    | empty  
attributes_opt : attributes  
               | empty  
attributes_opt : attributes  
               | empty  
attributes_opt : attributes  
               | empty  
indexer_modifiers_opt : indexer_modifiers  
                      | empty  
attributes_opt : attributes  
               | empty  
attributes_opt : attributes  
               | empty  
constructor_modifiers_opt : constructor_modifiers  
                          | empty  
formal_parameter_list_opt : formal_parameter_list  
                          | empty  
constructor_initializer_opt : constructor_initializer  
                            | empty  
argument_list_opt : argument_list  
                  | empty  
argument_list_opt : argument_list  
                  | empty  
attributes_opt : attributes  
               | empty  
extern_opt : EXTERN  
           | empty  
extern_opt : EXTERN  
           | empty  
attributes_opt : attributes  
               | empty  
extern_opt : EXTERN  
           | empty  
attributes_opt : attributes  
               | empty  
struct_modifiers_opt : struct_modifiers  
                     | empty  
struct_interfaces_opt : struct_interfaces  
                      | empty  
struct_member_declarations_opt : struct_member_declarations  
                               | empty  
dim_separators_opt : dim_separators  
                   | empty  
variable_initializer_list_opt : variable_initializer_list  
                              | empty  
attributes_opt : attributes  
               | empty  
interface_modifiers_opt : interface_modifiers  
                        | empty  
interface_base_opt : interface_base  
                   | empty  
interface_member_declarations_opt : interface_member_declarations  
                                  | empty  
attributes_opt : attributes  
               | empty  
new_opt : NEW  
        | empty  
formal_parameter_list_opt : formal_parameter_list  
                          | empty  
attributes_opt : attributes  
               | empty  
new_opt : NEW  
        | empty  
attributes_opt : attributes  
               | empty  
attributes_opt : attributes  
               | empty  
attributes_opt : attributes  
               | empty  
attributes_opt : attributes  
               | empty  
attributes_opt : attributes  
               | empty  
attributes_opt : attributes  
               | empty  
attributes_opt : attributes  
               | empty  
new_opt : NEW  
        | empty  
attributes_opt : attributes  
               | empty  
new_opt : NEW  
        | empty  
attributes_opt : attributes  
               | empty  
enum_modifiers_opt : enum_modifiers  
                   | empty  
enum_base_opt : enum_base  
              | empty  
enum_member_declarations_opt : enum_member_declarations  
                             | empty  
attributes_opt : attributes  
               | empty  
attributes_opt : attributes  
               | empty  
attributes_opt : attributes  
               | empty  
delegate_modifiers_opt : delegate_modifiers  
                       | empty  
formal_parameter_list_opt : formal_parameter_list  
                          | empty  
attribute_target_specifier_opt : attribute_target_specifier  
                               | empty  
attribute_target_specifier_opt : attribute_target_specifier  
                               | empty  
attribute_arguments_opt : attribute_arguments  
                        | empty  
positional_argument_list_opt : positional_argument_list  
                             | empty  
